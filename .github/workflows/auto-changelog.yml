name: Auto Changelog

on:
  push:
    branches: [main]
    tags:
      - 'v*'
  release:
    types: [published]

jobs:
  auto-changelog:
    runs-on: ubuntu-latest
    # Skip if commit is from github-actions bot to prevent infinite loop
    if: "!contains(github.event.head_commit.message, '[skip ci]') && github.actor != 'github-actions[bot]'"

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GA_TOKEN }}
          # For tag events, checkout main branch instead of detached HEAD
          ref: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') && 'main' || github.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          # Remove cache since we're using pnpm and installing globally

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Install auto-changelog
        run: npm install -g auto-changelog

      - name: Update package.json version from tag
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          # Extract version from tag (remove 'v' prefix)
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          echo "Updating package.json version to $TAG_VERSION"

          # Update package.json version using node
          node -e "
            const fs = require('fs');
            const pkg = JSON.parse(fs.readFileSync('package.json', 'utf8'));
            pkg.version = '$TAG_VERSION';
            fs.writeFileSync('package.json', JSON.stringify(pkg, null, 2) + '\n');
          "

      - name: Generate CHANGELOG.md
        run: |
          # Generate changelog using auto-changelog
          auto-changelog --template keepachangelog \
            --commit-limit false \
            --unreleased \
            --sort-commits date \
            --ignore-commit-pattern "^(build|chore|ci|docs|style|refactor|perf|test)(\(.+\))?: " \
            --commit-url "https://github.com/chess-labs/chessboard/commit/{id}" \
            --compare-url "https://github.com/chess-labs/chessboard/compare/{from}...{to}" \
            --issue-url "https://github.com/chess-labs/chessboard/issues/{id}"

      - name: Check for changes
        id: check-changes
        run: |
          if git diff --quiet; then
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "No changes to commit"
          else
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Changes detected"
            echo "Git diff:"
            git diff
          fi

      - name: Commit and push changes
        if: steps.check-changes.outputs.changed == 'true'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          # Ensure we're on a branch before committing
          CURRENT_BRANCH=$(git branch --show-current)
          if [ -z "$CURRENT_BRANCH" ]; then
            echo "Currently in detached HEAD state, checking out main branch"
            git checkout -B main
          fi

          git add .
          git commit -m "docs: auto-update changelog and version [skip ci]"

          # Push to the current branch or main if in detached HEAD
          if [ -n "$CURRENT_BRANCH" ]; then
            git push origin "$CURRENT_BRANCH"
          else
            git push origin main
          fi
